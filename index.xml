<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Uncaged blog</title>
    <link>https://uncaged-coder.github.io/</link>
    <description>Recent content on Uncaged blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 29 Oct 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://uncaged-coder.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Starting a Blog with Hugo, R Markdown, and Python (Reticulate)</title>
      <link>https://uncaged-coder.github.io/2023/10-29-starting-a-blog-with-hugo-r-markdown-and-python-reticulate/</link>
      <pubDate>Sun, 29 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://uncaged-coder.github.io/2023/10-29-starting-a-blog-with-hugo-r-markdown-and-python-reticulate/</guid>
      <description>I always prioritize simplicity. While many people today blog using platforms like WordPress, complete with an array of plugins and PHP-driven dynamic content, such complexity is often unnecessary. Take a moment to consider: why do we need dynamic content for something as straightforward as a blog?
Traditional blogging platforms frequently expose users to security risks, especially when built on languages like PHP. Consequently, Iâ€™ve chosen to use a static site generator, Hugo, in conjunction with R Markdown and Python via the Reticulate package.</description>
    </item>
    <item>
      <title>Of Ego, Fear, and Conflict: Towards a Transcendence for Conflict Resolution</title>
      <link>https://uncaged-coder.github.io/2023/06-29-of-ego-fear-and-conflict-towards-a-transcendence-for-conflict-resolution/</link>
      <pubDate>Thu, 29 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://uncaged-coder.github.io/2023/06-29-of-ego-fear-and-conflict-towards-a-transcendence-for-conflict-resolution/</guid>
      <description>Introduction: The Triad of Conflict In humanity&amp;rsquo;s constant endeavor to understand the conflictual nature of our existence, we have examined various facets of our behavior and interactions. At the heart of these reflections lie three interconnected and powerful factors: the desire to impose one&amp;rsquo;s viewpoint, fear, and ego. These three elements are often present in conflicts, whether they are interpersonal, social, or international.
The desire to impose one&amp;rsquo;s viewpoint: A Breeding Ground for Conflict Let&amp;rsquo;s start with the desire to impose one&amp;rsquo;s viewpoint.</description>
    </item>
    <item>
      <title>Funny C code</title>
      <link>https://uncaged-coder.github.io/2018/08-15-funny-c-code/</link>
      <pubDate>Wed, 15 Aug 2018 20:53:25 +0000</pubDate>
      <guid>https://uncaged-coder.github.io/2018/08-15-funny-c-code/</guid>
      <description>Here is something funny about C langage :)
Watch carefuly this function below and try to guess what will this program print to the console.
#include &lt; stdio.h &gt; int main(void) { int p[] = {0, 1, 2, 3, 4, 5, 6, 7}; int i=3; printf(&#34;i[%d]=%d\n&#34;, i, i[p]); return 0; } Is this code correct ? If the answer is yes, then what doest printf print ?
Well &amp;hellip; the answer is easy &amp;hellip;</description>
    </item>
    <item>
      <title>Intel interview</title>
      <link>https://uncaged-coder.github.io/2017/03-15-intel-interview/</link>
      <pubDate>Wed, 15 Mar 2017 14:53:25 +0000</pubDate>
      <guid>https://uncaged-coder.github.io/2017/03-15-intel-interview/</guid>
      <description>Do you want to work for Intel ?
If you are curious, here is the test I did. You are supposed to do it online and you have 2 hours.
Unfortunately I don&amp;rsquo;t remember exactly the question I had.
Training test Find a palindrome in an array
A is the array N is the size There were other special condition that I forgot, sorry.
Example:
A={-1,3,-4,5,1,-6,2,1};
You can return 1 because</description>
    </item>
    <item>
      <title>Mysterious cltq x86 instruction</title>
      <link>https://uncaged-coder.github.io/2017/02-18-mysterious-cltq-x86-instruction/</link>
      <pubDate>Sat, 18 Feb 2017 23:10:20 +0000</pubDate>
      <guid>https://uncaged-coder.github.io/2017/02-18-mysterious-cltq-x86-instruction/</guid>
      <description>Today I was working on some ugly C code and faced a strange issue:
a returned value by a function was different when we are back to the caller. And no, it&amp;rsquo;s not a gcc bug ;)
Let&amp;rsquo;s talk about that !
create 2 files, file1.c and file2.c like this. File1.c:
#include &lt; stdio.h&gt; int main(int argc, char* argv[]) { void* p = (void*)test_return(); printf(&#34;p = %p\n&#34;, p); return 0; } file2.</description>
    </item>
    <item>
      <title>About</title>
      <link>https://uncaged-coder.github.io/about/</link>
      <pubDate>Thu, 05 May 2016 21:48:51 -0700</pubDate>
      <guid>https://uncaged-coder.github.io/about/</guid>
      <description>Hi,
I&amp;rsquo;m Abdel, also known as Uncaged Coder.
Don&amp;rsquo;t set your expectations too high for this blog; it serves as a space for me to share my thoughts on a variety of subjects. The focus is primarily on Linux, open-source projects, and other geek-related topics.
This blog is powered by blogdown.</description>
    </item>
  </channel>
</rss>
